@model hlcWeb.Models.CaseFile

@{
    var action = (Model.Id == 0) ? "Add" : "Edit";
    ViewBag.Title = $"{action} Case File";
}

<div class="well">
    <i class="fa fa-address-card-o fa-2x fa-fw text-primary"></i><span class="h3"> @action Case File</span>
</div>
<div class="container">
    @using (Html.BeginForm("Edit", "CaseFiles", FormMethod.Post, new { @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.DateEntered)
        @Html.HiddenFor(m => m.EnteredBy)
        @Html.HiddenFor(m => m.DateLastUpdated)
        @Html.HiddenFor(m => m.LastUpdatedBy)
        @Html.HiddenFor(m => m.MedicalHistory)
        @Html.HiddenFor(m => m.TreatmentPlan)
        @Html.HiddenFor(m => m.PossibleStrategies)
        @Html.HiddenFor(m => m.ArticlesShared)
        @Html.HiddenFor(m => m.Outcome)

        if (action == "Add")
        {
        <div class="alert alert-info" role="alert">
            Enter the basic details for this case file below.  Once this information is entered, you will
            be able to edit the Medical History, Treatment Plan, etc when you view the case file.
        </div>
        }
        <div class="form-group">
            @Html.LabelFor(m => m.CaseDate, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.EditorFor(m => m.CaseDate, new { type = "date", @class = "form-control", autofocus = "autofocus" })
                @Html.ValidationMessageFor(m => m.CaseDate)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.FirstName, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.FirstName)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.LastName, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.LastName)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Age, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Age, new { @class = "form-control", placeholder = "(Leave blank if unknown)" })
                @*@Html.ValidationMessageFor(m => m.Age)*@
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.CongregationName, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.CongregationName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.CongregationName)
            </div>
        </div>
        <div class="form-group hlc-control">
            @Html.LabelFor(m => m.DiagnosisId, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.DiagnosisId, (SelectList)ViewBag.DiagnosisSelectList, "Select medical condition/problem diagnosed...", new { @class = "form-control", style = "max-width:100%;" })
                @Html.ValidationMessageFor(m => m.DiagnosisId)
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-2 control-label">Other diagnosis: </div>
            <div class="col-sm-8">
                @Html.TextBoxFor(m => m.DiagnosisOther, new { @class = "form-control", disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.DoctorId, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.DoctorId, (SelectList)ViewBag.DoctorSelectList, "Select attending physician...", new { @class = "form-control", style = "max-width:100%;" })
                @Html.ValidationMessageFor(m => m.DoctorId)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.HospitalId, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.HospitalId, (SelectList)ViewBag.HospitalSelectList, "Select hospital...", new { @class = "form-control", style = "max-width:100%;" })
                @Html.ValidationMessageFor(m => m.HospitalId)
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                Consultation details:
                @Html.TextAreaFor(m => m.ConsultingDoctor, new { @class = "form-control", rows = "2", placeholder = "Enter any details on doctor(s) consulted, if applicable" })
            </div>
        </div>

        <div class="form-group hlc-control">
            @Html.LabelFor(m => m.IsPediatricCase, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                <div class="checkbox">
                    <label>
                        @Html.CheckBoxFor(m => m.IsPediatricCase)
                        Check here if this is a Pediatric case <span class="text-muted">(Add additional information below if applicable)</span>
                    </label>
                </div>
            </div>
        </div>

        <div class="form-group hlc-control">
            <div class="col-sm-offset-2 col-sm-10">
                <div class="checkbox">
                    <label>
                        @Html.CheckBoxFor(m => m.CourtOrderSought)
                        Court order was sought
                    </label>
                </div>
            </div>
        </div>
        <div class="form-group hlc-control">
            <div class="col-sm-offset-2 col-sm-2 control-label">If so, sought by </div>
            <div class="col-sm-8">
                @Html.EnumDropDownListFor(m => m.CourtOrderSoughtBy, optionLabel: "Select...", htmlAttributes: new { @class = "form-control", disabled = "disabled" })
            </div>
        </div>

        <div class="form-group hlc-control">
            <div class="col-sm-offset-2 col-sm-10">
                <div class="checkbox">
                    <label>
                        @Html.CheckBoxFor(m => m.CourtOrderGranted)
                        Court order was granted
                    </label>
                </div>
            </div>
        </div>
        <div class="form-group hlc-control">
            <div class="col-sm-offset-2 col-sm-2 control-label">If not, reason </div>
            <div class="col-sm-8">
                @Html.EnumDropDownListFor(m => m.CourtOrderNotGrantedReason, optionLabel: "Select...", htmlAttributes: new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group hlc-control">
            <div class="col-sm-offset-2 col-sm-10">
                <div class="checkbox">
                    <label>
                        @Html.CheckBoxFor(m => m.ParentsNotified)
                        Parent/guardian was notified in advance of a court hearing
                    </label>
                </div>
            </div>
        </div>
        <div class="form-group hlc-control">
            <div class="col-sm-offset-2 col-sm-10">
                <div class="checkbox">
                    <label>
                        @Html.CheckBoxFor(m => m.ParentsChargedNeglect)
                        Parents were charged with neglect
                    </label>
                </div>
            </div>
        </div>
        <div class="form-group hlc-control">
            <div class="col-sm-offset-2 col-sm-10">
                <div class="checkbox">
                    <label>
                        @Html.CheckBoxFor(m => m.ParentsRightsRemoved)
                        Parental rights were removed
                    </label>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <div class="checkbox">
                    <label>
                        @Html.CheckBoxFor(m => m.PatientTransferred)
                        Patient was transferred to a different hospital or HLC territory
                    </label>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                Transfer details:
                @Html.TextAreaFor(m => m.TransferDetails, new { @class = "form-control", rows = "2", disabled = "disabled", placeholder = "Enter any details on the transfer (where, reason, etc)" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                Court order comments:
                @Html.TextAreaFor(m => m.CourtOrderComments, new { @class = "form-control", rows = "2", placeholder = "Enter any comments on the court order" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <div class="checkbox">
                    <label>
                        @Html.CheckBoxFor(m => m.TransfusionGiven)
                        Transfusion was given
                    </label>
                </div>
            </div>
        </div>

        <br />
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <button type="submit" class="btn btn-primary">Save</button>
                <button type="button" class="btn btn-default" onclick="window.history.back();">Cancel</button>
            </div>
        </div>
    }
</div>
@section scripts {
    <script>
        $(document).ready(function () {

            // Form loaded: set correct state for dependent dropdowns and textareas
            if ($("#CourtOrderSought").prop('checked')) {
                $("#CourtOrderSoughtBy").prop("disabled", "");
            }
            if ($("#CourtOrderGranted").prop('checked')) {
                $("#CourtOrderNotGrantedReason").prop("disabled", "disabled");
            }
            if ($("#PatientTransferred").prop('checked')) {
                $("#TransferDetails").prop("disabled", "");
            }

            // React to user selection and set states
            $("#DiagnosisId").change(function () {
                if ($(this).val() === "0") {
                    $("#DiagnosisOther").prop("disabled", "");
                } else {
                    $("#DiagnosisOther").val("");
                    $("#DiagnosisOther").prop("disabled", "disabled");
                }
            });

            $("#CourtOrderSought").click(function () {
                if ($(this).prop('checked')) {
                    $("#CourtOrderSoughtBy").prop("disabled", "");
                } else {
                    $("#CourtOrderSoughtBy").val("0");
                    $("#CourtOrderSoughtBy").prop("disabled", "disabled");
                }
            });

            $("#CourtOrderGranted").click(function () {
                if ($(this).prop('checked')) {
                    $("#CourtOrderNotGrantedReason").val("0");
                    $("#CourtOrderNotGrantedReason").prop("disabled", "disabled");
                } else {
                    $("#CourtOrderNotGrantedReason").prop("disabled", "");
                }
            });

            $("#PatientTransferred").click(function () {
                if ($(this).prop('checked')) {
                    $("#TransferDetails").prop("disabled", "");
                } else {
                    $("#TransferDetails").prop("disabled", "disabled");
                }
            });


            // Check validity of form on submit
            $("form").submit(function (e) {
                var form = $(this);
                // Highlight errors
                if (form.valid() === false) {
                    form.find("div.form-group").each(function () {
                        if ($(this).find("span.field-validation-error").length > 0)
                            $(this).addClass("has-error");
                        if ($(this).find("span.field-validation-valid").length > 0)
                            $(this).removeClass("has-error");
                    });
                } else {
                    // Required fields passed.  Perform special checks.
                    if ($("#DiagnosisId").val() === "0" && $("#DiagnosisOther").val().trim() === "") {
                        bootbox.alert("<b>You did not enter anything in the Other Diagnosis box.</b>  " +
                            "<br><br>You indicated you did not see the correct diagnosis in the list and " +
                            "wish to create a new one.  Please review again carefully the existing list and " +
                            "then enter a new diagnosis if needed.",
                            function () { $("#DiagnosisOther").focus(); });
                        e.preventDefault();
                        return false;
                    }
                    if ($("#CourtOrderSought").prop('checked') && $("#CourtOrderSoughtBy").val() === "0") {

                        bootbox.alert("<b>You did not indicate who sought the court order.</b>" +
                            "<br><br>" +
                            "If you check the 'Court order was sought' checkbox you must select who " +
                            "initiated the court order from the choices given.  If you do not see " +
                            "the correct choice choose 'Other' and provide more information below.",
                            function () { $("#CourtOrderSoughtBy").focus(); });
                        e.preventDefault();
                        return false;
                    }
                    if ($("#CourtOrderSought").prop('checked') && !$("#CourtOrderGranted").prop('checked') &&
                        $("#CourtOrderNotGrantedReason").val() === "0") {

                        bootbox.alert("<b>You must indicate the reason not granted.</b>" +
                            "<br><br>" +
                            "If you check the Court order was sought checkbox and do NOT check the Court " +
                            "order granted checkbox then you must select the reason it was not granted " +
                            "from the choices given.  If you do not see the correct choice choose 'Other' " +
                            "and provide more information below.",
                            function () { $("#CourtOrderNotGrantedReason").focus(); });
                        e.preventDefault();
                        return false;
                    }
                }
                return true;
            });

        });

    </script>
    @Scripts.Render("~/bundles/jqueryval")
}

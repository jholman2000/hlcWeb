@using hlcWeb.Infrastructure
@model hlcWeb.ViewModels.PracticeViewModel
@{
    var action = (Model.Practice.Id == 0) ? "Add" : "Edit";
    ViewBag.Title = $"{action} Practice";
}

<div class="well">
    <i class="fa fa-medkit fa-2x fa-fw text-primary"></i><span class="h3"> @action Practice/Facility</span>
</div>
<div class="container">
    @using (Html.BeginForm("Edit", "Practices", FormMethod.Post, new { @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.Practice.Id)

        Html.RenderPartial("EditDetails", Model.Practice, new ViewDataDictionary()
        {
            TemplateInfo = new TemplateInfo()
            {
                HtmlFieldPrefix = "Practice"
            }
        });

        <br />
        <div class="form-group">
            @Html.Label(Constants.Notes)
            @Html.TextAreaFor(m => m.Practice.Notes, new { @class = "form-control", rows = "8", placeholder = "Enter any comments on this Practice/Facility", autofocus = "autofocus" })
        </div>
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <button type="submit" class="btn btn-primary">Save</button>
                <button type="button" class="btn btn-default" onclick="window.history.back();">Cancel</button>
            </div>
        </div>

    }
</div>
@section scripts
{
    <script>
        $(document).ready(function() {

            $("form").submit(function() {
                var form = $(this);
                // Highlight errors
                if (form.valid() === false) {
                    form.find("div.form-group").each(function() {
                        if ($(this).find("span.field-validation-error").length > 0)
                            $(this).addClass("has-error");
                        if ($(this).find("span.field-validation-valid").length > 0)
                            $(this).removeClass("has-error");
                    });
                }
                return true;
            });
        });
    </script>
    @Scripts.Render("~/bundles/jqueryval")

}
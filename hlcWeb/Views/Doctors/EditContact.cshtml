@model hlcWeb.ViewModels.DoctorContactViewModel

@{
    var action = (Model.Id == 0) ? "Add" : "Edit";
    ViewBag.Title = $"{action} Doctor";
}

<div class="well">
    <i class="fa fa-user-md fa-2x fa-fw text-primary"></i><span class="h3"> @action Doctor</span>
</div>
<div class="container">
    @using (Html.BeginForm("EditContact", "Doctors", FormMethod.Post, new { @class="form-horizontal"}))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.OriginalStatus)
        @Html.HiddenFor(m => m.StatusDate)
        @Html.HiddenFor(m => m.DateEntered)
        @Html.HiddenFor(m => m.EnteredBy)
        @Html.HiddenFor(m => m.DateLastUpdated)
        @Html.HiddenFor(m => m.LastUpdatedBy)
        @Html.HiddenFor(m => m.Attitude)
        @Html.HiddenFor(m => m.Practice.Id)

        if (action == "Add")
        {
            <div class="alert alert-info" role="alert">
                Enter the basic contact information for this Doctor.  Once this information is entered, you will
                be able to edit his/her Attitude, Specialties and Hospitals when you view the Doctor.
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(m => m.Status, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.EnumDropDownListFor(m => m.Status, optionLabel: "Select...", htmlAttributes: new { @class="form-control"})
                @Html.ValidationMessageFor(m => m.Status)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.FirstName, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", autofocus = "autofocus" })
                @Html.ValidationMessageFor(m => m.FirstName)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.LastName, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.LastName)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.MobilePhone, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.MobilePhone, new { @class = "form-control", type = "tel" })
                @Html.ValidationMessageFor(m => m.MobilePhone)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.HomePhone, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.HomePhone, new { @class = "form-control", type = "tel" })
                @Html.ValidationMessageFor(m => m.HomePhone)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Pager, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Pager, new { @class = "form-control", type = "tel" })
                @Html.ValidationMessageFor(m => m.Pager)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.EmailAddress, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.EmailAddress, new { @class = "form-control", type = "email" })
                @Html.ValidationMessageFor(m => m.EmailAddress)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.PracticeId, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.PracticeId, (SelectList)ViewBag.PracticeSelectList, "Select...", new { @class = "form-control", style="max-width:100%;" })
                @Html.ValidationMessageFor(m => m.PracticeId)
            </div>
        </div>
        <fieldset id="NewPractice" class="well panel-info col-sm-offset-1 col-sm-10" style="display:none">
            <div style="border-bottom-style: inset;margin-bottom: 10px;"><strong>
                Add a new Practice
            </strong></div>

           @{
               Html.RenderPartial("../Practices/EditDetails", Model.Practice, new ViewDataDictionary()
               {
                   TemplateInfo = new TemplateInfo()
                   {
                       HtmlFieldPrefix = "Practice"
                   }
               });
           }
        </fieldset>
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(m => m.IsBSMP)
                    @Html.LabelFor(m => m.IsBSMP)
                    @Html.ValidationMessageFor(m => m.IsBSMP)
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(m => m.IsHRP)
                    @Html.LabelFor(m => m.IsHRP)
                    @Html.ValidationMessageFor(m => m.IsHRP)
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.PeerReview, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.TextAreaFor(m => m.PeerReview, new { @class = "form-control", rows = "3" })
                @Html.ValidationMessageFor(m => m.PeerReview)
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <button type="submit" class="btn btn-primary">Save</button>
                <button type="button" class="btn btn-default" onclick="window.history.back();">Cancel</button>
            </div>
        </div>
    }
</div>
@section scripts
{
    <script>
        $(document).ready(function() {

            // React to user selection and set states
            $("#PracticeId").change(function () {
                if ($(this).val() === "-1") {
                    $("#NewPractice").show();
                    $("#Practice_PracticeName").focus();
                } else {
                    $("#NewPractice").hide();
                }
            });

            $("form")
                .submit(function() {
                    var form = $(this);
                    // Highlight errors
                    if (form.valid() === false) {
                        form.find("div.form-group")
                            .each(function() {
                                if ($(this).find("span.field-validation-error").length > 0)
                                    $(this).addClass("has-error");
                                if ($(this).find("span.field-validation-valid").length > 0)
                                    $(this).removeClass("has-error");
                            });
                    }
                    return true;
                });
            });
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}